homework_comments, teacher_comments, character_comments, leadership_comments, bullying_comments, learning_diffs_comments
)
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.five-star-review") %>%
html_element("div.comment") %>%
html_text() -> overall_comments
data.frame(
school_name, review_date,
overall_rating, overall_comments,
homework_rating, teacher_rating, character_rating, leadership_rating, bullying_rating, learning_diffs_rating,
homework_comments, teacher_comments, character_comments, leadership_comments, bullying_comments, learning_diffs_comments
)
homework_comments <- fn_extract_topic_comments("Homework")
homework_comments <- fn_extract_topic_comments("Homework")
review_index <- rep(1:length(num_topic_reviews), times = num_topic_reviews)
fn_extract_topic_comments <- function(my_topic){
tmp <- rep(NA, times = length(review_date))
tmp[review_index[topic_labels == my_topic]] <- topic_comments[which(topic_labels == my_topic)]
return(tmp)
}
homework_comments <- fn_extract_topic_comments("Homework")
homework_comments
#get the page html
webpage <- read_html(remDr$getPageSource()[[1]])
webpage %>%
html_elements("div.static-container") %>%
html_element("div.container") %>%
html_element("a") %>%
html_text() -> school_name
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.five-star-review") %>%
html_element("div.comment") %>%
html_text() -> overall_comments
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.answer") %>%
as.character() %>%
str_count("filled-star") -> overall_rating
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.user-type") %>%
html_text() -> review_type
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.type-and-date") %>%
html_text() %>%
as.Date("%B %d, %Y") -> review_date
### Topic reviews
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topic"') -> num_topic_reviews
webpage %>%
html_elements("div.topic") %>%
html_text() -> topic_labels
webpage %>%
html_elements("div.topical-review-detail") %>%
html_element("div.comment") %>%
html_text() -> topic_comments
### Function to extract topic comments
review_index <- rep(1:length(num_topic_reviews), times = num_topic_reviews)
fn_extract_topic_comments <- function(my_topic){
tmp <- rep(NA, times = length(review_date))
tmp[review_index[topic_labels == my_topic]] <- topic_comments[which(topic_labels == my_topic)]
return(tmp)
}
homework_comments <- fn_extract_topic_comments("Homework")
teacher_comments <- fn_extract_topic_comments("Teachers")
character_comments <- fn_extract_topic_comments("Character")
leadership_comments <- fn_extract_topic_comments("Leadership")
bullying_comments <- fn_extract_topic_comments("Bullying")
learning_diffs_comments <- fn_extract_topic_comments("Learning Differences")
### Topic ratings
webpage %>%
html_elements("div.topical-item") %>%
html_element("div.topic-details") %>%
html_text() -> topic_rating_label
topic_rating_label <- topic_rating_label[-grep("\\(", topic_rating_label)]
webpage %>%
html_elements("div.topical-item") %>%
html_element("div.topical-average") %>%
html_element("div.numeric") %>%
html_text() %>%
as.numeric() -> topic_rating
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topical-item"') -> num_topic_ratings
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topical-item"') -> num_topic_ratings
### Function to extract topic ratings
review_index_ratings <- rep(1:length(num_topic_reviews), times = num_topic_ratings)
fn_extract_topic_rating <- function(my_topic){
tmp <- rep(NA, times = length(review_date))
tmp[review_index_ratings[grep(my_topic, topic_rating_label)]] <- topic_rating[grep(my_topic, topic_rating_label)]
return(tmp)
}
homework_rating <- fn_extract_topic_rating("Homework")
teacher_rating <- fn_extract_topic_rating("Teachers")
character_rating <- fn_extract_topic_rating("Character")
leadership_rating <- fn_extract_topic_rating("Leadership")
bullying_rating <- fn_extract_topic_rating("Bullying")
learning_diffs_rating <- fn_extract_topic_rating("Learning Differences")
### Combine together
data.frame(
school_name, review_date,
overall_rating, overall_comments,
homework_rating, teacher_rating, character_rating, leadership_rating, bullying_rating, learning_diffs_rating,
homework_comments, teacher_comments, character_comments, leadership_comments, bullying_comments, learning_diffs_comments
)
#get the page html
webpage <- read_html(remDr$getPageSource()[[1]])
library(RSelenium)
library(rvest)
library(stringr)
#start RSelenium
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
remDr <- rD[["client"]]
remDr$open()
remDr$setWindowSize(width = 1920/2, height = 1080)
#navigate to your page
remDr$navigate("https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/")
#scroll down waiting for the page to load at each time
while(length(remDr$findElements("link text", "More") ) != 0){
print(length(remDr$findElements("link text", "More") ))
remDr$findElements("link text", "More")[[1]]$clickElement()
remDr$executeScript(paste("scroll(0,",i*1080,");"))
Sys.sleep(1)
}
#get the page html
webpage <- read_html(remDr$getPageSource()[[1]])
webpage %>%
html_elements("div.static-container") %>%
html_element("div.container") %>%
html_element("a") %>%
html_text() -> school_name
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.five-star-review") %>%
html_element("div.comment") %>%
html_text() -> overall_comments
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.answer") %>%
as.character() %>%
str_count("filled-star") -> overall_rating
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.user-type") %>%
html_text() -> review_type
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.type-and-date") %>%
html_text() %>%
as.Date("%B %d, %Y") -> review_date
### Topic reviews
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topic"') -> num_topic_reviews
webpage %>%
html_elements("div.topic") %>%
html_text() -> topic_labels
webpage %>%
html_elements("div.topical-review-detail") %>%
html_element("div.comment") %>%
html_text() -> topic_comments
### Function to extract topic comments
review_index <- rep(1:length(num_topic_reviews), times = num_topic_reviews)
fn_extract_topic_comments <- function(my_topic){
tmp <- rep(NA, times = length(review_date))
tmp[review_index[topic_labels == my_topic]] <- topic_comments[which(topic_labels == my_topic)]
return(tmp)
}
homework_comments <- fn_extract_topic_comments("Homework")
teacher_comments <- fn_extract_topic_comments("Teachers")
character_comments <- fn_extract_topic_comments("Character")
leadership_comments <- fn_extract_topic_comments("Leadership")
bullying_comments <- fn_extract_topic_comments("Bullying")
learning_diffs_comments <- fn_extract_topic_comments("Learning Differences")
### Topic ratings
webpage %>%
html_elements("div.topical-item") %>%
html_element("div.topic-details") %>%
html_text() -> topic_rating_label
topic_rating_label <- topic_rating_label[-grep("\\(", topic_rating_label)]
webpage %>%
html_elements("div.topical-item") %>%
html_element("div.topical-average") %>%
html_element("div.numeric") %>%
html_text() %>%
as.numeric() -> topic_rating
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topical-item"') -> num_topic_ratings
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topical-item"') -> num_topic_ratings
### Function to extract topic ratings
review_index_ratings <- rep(1:length(num_topic_reviews), times = num_topic_ratings)
fn_extract_topic_rating <- function(my_topic){
tmp <- rep(NA, times = length(review_date))
tmp[review_index_ratings[grep(my_topic, topic_rating_label)]] <- topic_rating[grep(my_topic, topic_rating_label)]
return(tmp)
}
homework_rating <- fn_extract_topic_rating("Homework")
teacher_rating <- fn_extract_topic_rating("Teachers")
character_rating <- fn_extract_topic_rating("Character")
leadership_rating <- fn_extract_topic_rating("Leadership")
bullying_rating <- fn_extract_topic_rating("Bullying")
learning_diffs_rating <- fn_extract_topic_rating("Learning Differences")
### Combine together
data.frame(
school_name, review_date,
overall_rating, overall_comments,
homework_rating, teacher_rating, character_rating, leadership_rating, bullying_rating, learning_diffs_rating,
homework_comments, teacher_comments, character_comments, leadership_comments, bullying_comments, learning_diffs_comments
)
library(RSelenium)
library(rvest)
library(stringr)
#start RSelenium
rD <- rsDriver(browser="firefox", port=4545L, verbose=F)
remDr <- rD[["client"]]
remDr$open()
remDr$setWindowSize(width = 1920/2, height = 1080)
#navigate to your page
remDr$navigate("https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/")
#scroll down waiting for the page to load at each time
while(length(remDr$findElements("link text", "More") ) != 0){
print(length(remDr$findElements("link text", "More") ))
remDr$findElements("link text", "More")[[1]]$clickElement()
remDr$executeScript(paste("scroll(0,",i*1080,");"))
Sys.sleep(1)
}
#get the page html
webpage <- read_html(remDr$getPageSource()[[1]])
webpage %>%
html_elements("div.static-container") %>%
html_element("div.container") %>%
html_element("a") %>%
html_text() -> school_name
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.five-star-review") %>%
html_element("div.comment") %>%
html_text() -> overall_comments
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.answer") %>%
as.character() %>%
str_count("filled-star") -> overall_rating
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.user-type") %>%
html_text() -> review_type
webpage %>%
html_elements("div.user-reviews-container") %>%
html_element("div.type-and-date") %>%
html_text() %>%
as.Date("%B %d, %Y") -> review_date
### Topic reviews
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topic"') -> num_topic_reviews
webpage %>%
html_elements("div.topic") %>%
html_text() -> topic_labels
webpage %>%
html_elements("div.topical-review-detail") %>%
html_element("div.comment") %>%
html_text() -> topic_comments
### Function to extract topic comments
review_index <- rep(1:length(num_topic_reviews), times = num_topic_reviews)
fn_extract_topic_comments <- function(my_topic){
tmp <- rep(NA, times = length(review_date))
tmp[review_index[topic_labels == my_topic]] <- topic_comments[which(topic_labels == my_topic)]
return(tmp)
}
homework_comments <- fn_extract_topic_comments("Homework")
teacher_comments <- fn_extract_topic_comments("Teachers")
character_comments <- fn_extract_topic_comments("Character")
leadership_comments <- fn_extract_topic_comments("Leadership")
bullying_comments <- fn_extract_topic_comments("Bullying")
learning_diffs_comments <- fn_extract_topic_comments("Learning Differences")
### Topic ratings
webpage %>%
html_elements("div.topical-item") %>%
html_element("div.topic-details") %>%
html_text() -> topic_rating_label
topic_rating_label <- topic_rating_label[-grep("\\(", topic_rating_label)]
webpage %>%
html_elements("div.topical-item") %>%
html_element("div.topical-average") %>%
html_element("div.numeric") %>%
html_text() %>%
as.numeric() -> topic_rating
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topical-item"') -> num_topic_ratings
webpage %>%
html_elements("div.user-reviews-container") %>%
as.character() %>%
str_count('<div class="topical-item"') -> num_topic_ratings
### Function to extract topic ratings
review_index_ratings <- rep(1:length(num_topic_reviews), times = num_topic_ratings)
fn_extract_topic_rating <- function(my_topic){
tmp <- rep(NA, times = length(review_date))
tmp[review_index_ratings[grep(my_topic, topic_rating_label)]] <- topic_rating[grep(my_topic, topic_rating_label)]
return(tmp)
}
homework_rating <- fn_extract_topic_rating("Homework")
teacher_rating <- fn_extract_topic_rating("Teachers")
character_rating <- fn_extract_topic_rating("Character")
leadership_rating <- fn_extract_topic_rating("Leadership")
bullying_rating <- fn_extract_topic_rating("Bullying")
learning_diffs_rating <- fn_extract_topic_rating("Learning Differences")
### Combine together
data.frame(
school_name, review_date,
overall_rating, overall_comments,
homework_rating, teacher_rating, character_rating, leadership_rating, bullying_rating, learning_diffs_rating,
homework_comments, teacher_comments, character_comments, leadership_comments, bullying_comments, learning_diffs_comments
)
source('~/GitHub/scraping/RSelenium.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
library(V8)
library(jsonlite)
library(stringr)
school_list_url_left <- "https://www.greatschools.org/california/santa-barbara/schools/?page="
school_list_url_right <- "&view=table"
school_list_js_xpath <- "/html/head/script[1]"
source("scrape_school_lists.R")
school_url_left <- 'https://www.greatschools.org/'
v_school_url_right <- df_school_list$links$reviews
v_school_url_right <- gsub("#Reviews", "reviews/", v_school_url_right)
v_school_urls <- paste0(school_url_left, v_school_url_right)
rD <- rsDriver(browser = "firefox",
port = 4545L,
verbose = F)
library(RSelenium)
rD <- rsDriver(browser = "firefox",
port = 4545L,
verbose = F)
remDr <- rD[["client"]]
remDr$setWindowSize(width = 1920 / 2, height = 1080)
for(s in 1:1){
school_url <- v_school_urls[s]
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
source("scrape_review_page.R")
if (s == 1){
df_all_school_reviews <- df_school_review
} else{
df_all_school_reviews <- rbind(df_all_school_reviews,
df_school_review)
}
}
df_all_school_reviews
for(s in 1:2){
school_url <- v_school_urls[s]
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
source("scrape_review_page.R")
if (s == 1){
df_all_school_reviews <- df_school_review
} else{
df_all_school_reviews <- bind_rows(df_all_school_reviews,
df_school_review)
}
}
df_all_school_reviews
View(df_all_school_reviews)
View(df_all_school_reviews)
df_all_school_reviews %>% group_by(school_name) %>% summarise(mean_rating <- mean(overall_rating))
length(v_school_urls)
df_school_list
remDr$close()
rD$server$stop()
rm(rD)
df_school_list
View(df_school_list)
summary(df_schools)
summary(df_school_list)
df_school_list
str(df_school_list)
source("scrape_school_lists.R")
df_school_list$links
v_school_urls
rD <- rsDriver(browser = "firefox",
verbose = F)
remDr <- rD[["client"]]
remDr$setWindowSize(width = 1920 / 2, height = 1080)
for (s in 1:2) {
school_url <- v_school_urls[s]
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
print("Scraping, ", school_url)
source("scrape_school_reviews.R")
if (s == 1) {
df_all_school_reviews <- df_school_review
} else{
df_all_school_reviews <- bind_rows(df_all_school_reviews,
df_school_review)
}
}
for (s in 1:2) {
school_url <- v_school_urls[s]
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
print("Scraping, ", school_url)
source("scrape_school_reviews.R")
if (s == 1) {
df_all_school_reviews <- df_school_review
} else{
df_all_school_reviews <- bind_rows(df_all_school_reviews,
df_school_review)
}
}
school_url_left <- 'https://www.greatschools.org/'
v_school_url_right <- df_school_list$links$reviews
v_school_url_right <- gsub("#Reviews", "reviews/", v_school_url_right)
v_school_urls <- paste0(school_url_left, v_school_url_right)
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
for (s in 1:2) {
school_url <- v_school_urls[s]
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
print("Scraping, ", school_url)
source("scrape_school_reviews.R")
if (s == 1) {
df_all_school_reviews <- df_school_review
} else{
df_all_school_reviews <- bind_rows(df_all_school_reviews,
df_school_review)
}
}
school_url <- v_school_urls[s]
for (s in 1:2) {
school_url <- v_school_urls[s]
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
#  print("Scraping, ", school_url)
source("scrape_school_reviews.R")
if (s == 1) {
df_all_school_reviews <- df_school_review
} else{
df_all_school_reviews <- bind_rows(df_all_school_reviews,
df_school_review)
}
}
df_all_school_reviews
View(df_all_school_reviews)
View(df_all_school_reviews)
review_type
for (s in 1:2) {
school_url <- v_school_urls[s]
#school_url <- 'https://www.greatschools.org/california/santa-barbara/11279-Crane-Country-Day-School/reviews/'
#  print("Scraping, ", school_url)
source("scrape_school_reviews.R")
if (s == 1) {
df_all_school_reviews <- df_school_review
} else{
df_all_school_reviews <- bind_rows(df_all_school_reviews,
df_school_review)
}
}
df_all_school_reviews
View(df_all_school_reviews)
remDr$close()
rD$server$stop()
rm(rD)
df_schools %>%
mutate(pre_k = ifelse(grepl("p", levelCode),1,0),
elementary = ifelse(grepl("e", levelCode),1,0),
middle = ifelse(grepl("m", levelCode),1,0),
high = ifelse(grepl("h", levelCode),1,0)) %>%
cbind(df_schools$collegeEnrollmentData,
df_schools$subratings,
df_schools$remediationData,
df_schools$links,
df_schools$address) %>%
select(
id,
district_name = district_name
) -> df_schools
df_schools %>%
mutate(pre_k = ifelse(grepl("p", levelCode),1,0),
elementary = ifelse(grepl("e", levelCode),1,0),
middle = ifelse(grepl("m", levelCode),1,0),
high = ifelse(grepl("h", levelCode),1,0)) %>%
cbind(df_schools$collegeEnrollmentData,
df_schools$subratings,
df_schools$remediationData,
df_schools$links,
df_schools$address) %>%
select(
id,
district_name = districtName
) -> df_schools
as.numeric("5%")
summarize(df_school_list)
names(df_school_list)
num_pages_to_scrape <- 1
source("scrape_school_lists.R")
print("Scraping, ", school_url)
school_url
paste("Scraping, ", school_url)
